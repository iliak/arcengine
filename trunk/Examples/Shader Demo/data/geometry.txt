#version 330

precision highp float;

layout (triangles) in;
layout (triangle_strip) out;
layout (max_vertices = 3) out;



in vec4 texture[];


out vec4 out_texture;


void main(void)
{
	int i;

	for (i = 0; i < 3; i++)
	{
		out_texture = texture[i];
		gl_Position = gl_in[i].gl_Position;
		EmitVertex();
	}
	EndPrimitive();
}












/*
#version 120 
#extension GL_EXT_geometry_shader4 : enable

void main(void)
{
	// variable to use in for loops
	int i;

	// Emit the original vertices without changing, making
	// this part exactly the same as if no geometry shader
	// was used.
	for(i=0; i< gl_VerticesIn; i++)
	{
		// copy color 
		gl_FrontColor = gl_FrontColorIn[i]; 
	 
		// copy position 
		gl_Position = gl_PositionIn[i]; 
	 
		// done with the vertex 
		EmitVertex(); 
	}
	// End the one primitive with the original vertices
	EndPrimitive();



	// Now we generate some more !
	for(i=0; i< gl_VerticesIn; i++)
	{
		// copy color 
		gl_FrontColor = gl_FrontColorIn[i]; 

		// copy position 
		gl_Position = gl_PositionIn[i]; 
		gl_Position.x += 0.5;

		// done with the vertex 
		EmitVertex();
 	}
	EndPrimitive();
}
*/