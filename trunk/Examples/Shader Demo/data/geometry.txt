#version 330

precision highp float;

layout (triangles) in;
layout (triangle_strip) out;
layout (max_vertices = 3) out;


uniform float push_out;
uniform mat4 mvp;


in vec2 texture[];


out vec2 out_texture;


void main(void)
{
	// Face normal
	vec3 face_normal = normalize(cross(	gl_in[1].gl_Position.xyz - gl_in[0].gl_Position.xyz,
										gl_in[2].gl_Position.xyz - gl_in[0].gl_Position.xyz));

	for (int i = 0; i < 3; i++)
	{
		out_texture = texture[i];

		// Translate the face by its normal
        gl_Position = mvp * vec4(gl_in[i].gl_Position.xyz + face_normal * push_out, gl_in[i].gl_Position.w);

		EmitVertex();
	}


	EndPrimitive();
}


